###############################################################################
# net.solarnetwork.central.dao.jdbc Configuration Admin properties
###############################################################################

###############################################################################
# jdbc.driver   <class name>
# jdbc.url      <jdbc url>
# jdbc.user     <jdbc username>
# jdbc.pass     <jdbc password>
# 
# The jdbc.* properties define the JDBC connection settings to use for the
# exported javax.sql.DataSource service. The defaults here are for an
# embedded Derby database.

jdbc.driver = org.postgresql.Driver
jdbc.url = jdbc:postgresql://localhost:5432/solarnetwork
jdbc.user = solarnet
jdbc.pass = solarnet


###############################################################################
# jdbc.pool.initialSize                   <integer>
# jdbc.pool.minIdle                       <integer>
# jdbc.pool.maxIdle                       <integer>
# jdbc.pool.maxActive                     <integer>
# jdbc.pool.maxWait                       <milliseconds>
# jdbc.pool.maxAge                        <milliseconds>
# jdbc.pool.timeBetweenEvictionRunsMillis <milliseconds>
# jdbc.pool.minEvictableIdleTimeMillis    <milliseconds>
# jdbc.pool.removeAbandonedTimeout        <seconds>
# jdbc.pool.abandonWhenPercentageFull     <integer percentage 0-100>
# 
# The jdbc.pool.* properties define the JDBC connection pool settings to use
# for the exported javax.sql.DataSource service. The defaults here should be
# suitable for most cases.
# 
# The maxIdle property is the maximum number of "idle" connections to hold on
# to. The maxActive is the maximum number of active connections to allow,
# before new connection requests are blocked until a free connection becomes
# available. The maxWait is the maximum amount of time for blocked 
# connections to wait for a free connection before throwing an exception. The
# timeBetweenEvictionRunsMillis is the period at which the pool will look
# for idle connections it can evict. The minEvictableIdleTimeMillis is the
# minimum length of time a connection must be idle for before it can be
# evicted from the pool.

jdbc.pool.initialSize = 1
jdbc.pool.minIdle = 1
jdbc.pool.maxIdle = 4
jdbc.pool.maxActive = 10
jdbc.pool.maxWait = 20000
jdbc.pool.maxAge = 86400000
jdbc.pool.removeAbandonedTimeout = 600
jdbc.pool.abandonWhenPercentageFull = 70
jdbc.pool.timeBetweenEvictionRunsMillis = 120000
jdbc.pool.minEvictableIdleTimeMillis = 300000
