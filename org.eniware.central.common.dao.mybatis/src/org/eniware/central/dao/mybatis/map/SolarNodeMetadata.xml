<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Thu Nov 13 07:30:21 NZDT 2014-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.eniware.central.datum.dao.mybatis.EniwareEdgeMetadata">

	<parameterMap id="pmap-EniwareEdgeMetadata" type="EniwareEdgeMetadata">
		<parameter property="created" jdbcType="TIMESTAMP" mode="IN"/>
		<parameter property="nodeId" jdbcType="BIGINT" mode="IN"/>
		<parameter property="metaJson" jdbcType="VARCHAR" mode="IN"/>
	</parameterMap>

	<update id="insert-EniwareEdgeMetadata" parameterMap="pmap-EniwareEdgeMetadata" statementType="CALLABLE">
		{call eniwarenet.store_node_meta(?, ?, ?)}
	</update>
	
	<update id="update-EniwareEdgeMetadata" parameterMap="pmap-EniwareEdgeMetadata" statementType="CALLABLE">
		{call eniwarenet.store_node_meta(?, ?, ?)}
	</update>
	
	<delete id="delete-EniwareEdgeMetadata" parameterType="long">
		DELETE FROM eniwarenet.ew_edge_meta
		WHERE node_id = #{id}
	</delete>
	
	<sql id="fragment-EniwareEdgeMetadata-full-result">
		nmeta.node_id AS node_meta_node_id,
		nmeta.created AS node_meta_created,
		nmeta.updated AS node_meta_updated,
		nmeta.jdata AS node_meta_jdata
	</sql>
	
	<resultMap id="EniwareEdgeMetadataFullResult" type="EniwareEdgeMetadata">
		<id property="nodeId" column="node_meta_node_id"/>
		<id property="created" column="node_meta_created"/>
		<result property="updated" column="node_meta_updated"/>
		<result property="metaJson" column="node_meta_jdata"/>
	</resultMap>
	
	<select id="get-EniwareEdgeMetadata-for-id" parameterType="long" resultMap="EniwareEdgeMetadataFullResult">
		SELECT
			<include refid="fragment-EniwareEdgeMetadata-full-result"/>
		FROM
			eniwarenet.ew_edge_meta nmeta
		WHERE
			nmeta.node_id = #{id}
	</select>

	<!-- 
		FilterableDao support 
	-->

	<resultMap id="EniwareEdgeMetadataMatchResult" type="EniwareEdgeMetadataMatch" extends="org.eniware.central.datum.dao.mybatis.EniwareEdgeMetadata.EniwareEdgeMetadataFullResult"/>

	<sql id="fragment-findall-EniwareEdgeMetadata-EniwareEdgeMetadataMatch-where">
		<where>
			<if test="filter.nodeIds != null and filter.nodeIds.length > 0">
				AND nmeta.node_id = ANY(#{filter.nodeIds,jdbcType=ARRAY,typeHandler=org.eniware.central.dao.mybatis.type.LongArrayTypeHandler})
			</if>
		</where>
	</sql>


	<select id="findall-EniwareEdgeMetadata-EniwareEdgeMetadataMatch" resultMap="EniwareEdgeMetadataMatchResult" fetchSize="50" resultSetType="FORWARD_ONLY">
		SELECT
			<include refid="fragment-EniwareEdgeMetadata-full-result"/>
		FROM
			eniwarenet.ew_edge_meta nmeta
		<include refid="fragment-findall-EniwareEdgeMetadata-EniwareEdgeMetadataMatch-where"/>
		ORDER BY
		<choose>
			<when test="SortDescriptors != null and SortDescriptors.size &gt; 0">
				 <foreach collection="SortDescriptors" item="item" separator=",">
					<if test="item.sortKey == &quot;created&quot;">nmeta.created</if>
					<if test="item.sortKey == &quot;updated&quot;">nmeta.updated</if>
					<if test="item.sortKey == &quot;node&quot;">nmeta.node_id</if>
					<if test="item.descending">DESC</if>
				</foreach>
			</when>
			<otherwise>
				nmeta.node_id
			</otherwise>
		</choose>
	</select>

	<select id="findall-EniwareEdgeMetadata-EniwareEdgeMetadataMatch-count" resultType="long">
		SELECT count(nmeta.created)
		FROM
			eniwarenet.ew_edge_meta nmeta
		<include refid="fragment-findall-EniwareEdgeMetadata-EniwareEdgeMetadataMatch-where"/>
	</select>

</mapper>